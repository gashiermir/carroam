<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/styles/main.css">
</head>
<body>
    <div class="container mt-5">
        <h2>Chat</h2>
        <div id="app">
            <div v-for="chat in chats" :key="chat.id" class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">{{ chat.sender.vorname }} {{ chat.sender.nachname }} an {{ chat.receiver.vorname }} {{ chat.receiver.nachname }}</h5>
                    <p class="card-text">{{ chat.message }}</p>
                </div>
            </div>
            <form @submit.prevent="sendMessage">
                <div class="form-group">
                    <label for="receiver">Empf√§nger:</label>
                    <select v-model="newChat.receiver" class="form-control" required>
                        <option v-for="user in users" :value="user.id">{{ user.vorname }} {{ user.nachname }}</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="message">Nachricht:</label>
                    <textarea v-model="newChat.message" class="form-control" required></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Senden</button>
            </form>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.prod.js"></script>
    <script>
        const { createApp } = Vue;
        createApp({
            data() {
                return {
                    chats: [],
                    users: [],
                    newChat: {
                        receiver: '',
                        message: ''
                    }
                };
            },
            created() {
                this.fetchChats();
                this.fetchUsers();
            },
            methods: {
                fetchChats() {
                    fetch('/api/chats')
                        .then(response => response.json())
                        .then(data => {
                            this.chats = data;
                        })
                        .catch(error => console.error('Error fetching chats:', error));
                },
                fetchUsers() {
                    fetch('/api/users')
                        .then(response => response.json())
                        .then(data => {
                            this.users = data;
                        })
                        .catch(error => console.error('Error fetching users:', error));
                },
                sendMessage() {
                    fetch('/api/chats', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(this.newChat)
                    })
                        .then(response => response.json())
                        .then(data => {
                            this.chats.push(data);
                            this.newChat.message = '';
                        })
                        .catch(error => console.error('Error sending message:', error));
                }
            }
        }).mount('#app');
    </script>
</body>
</html>